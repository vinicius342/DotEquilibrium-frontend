import { defineConfig } from "vite";
import react from "@vitejs/plugin-react-swc";
import path from "path";
import * as fs from "fs";
import { componentTagger } from "lovable-tagger";

// https://vitejs.dev/config/
export default defineConfig(({ mode }) => {
  // Try to load local certs generated by mkcert / openssl and use HTTPS when available.
  const certDir = path.resolve(__dirname, "certs");
  const certPath = path.join(certDir, "localhost.pem");
  const keyPath = path.join(certDir, "localhost-key.pem");

  let httpsConfig: false | { key: Buffer; cert: Buffer } = false;
  try {
    if (fs.existsSync(certPath) && fs.existsSync(keyPath)) {
      httpsConfig = {
        key: fs.readFileSync(keyPath),
        cert: fs.readFileSync(certPath),
      };
      console.log("Vite: using HTTPS with certs from", certDir);
    }
  } catch (err) {
    console.warn("Vite: error reading certs, falling back to HTTP", err);
  }

  return ({
    server: {
      host: "::",
      port: 3000,
      https: httpsConfig || undefined,
    },
    plugins: [
      react(),
      mode === 'development' &&
      componentTagger(),
    ].filter(Boolean),
    resolve: {
      alias: {
        "@": path.resolve(__dirname, "./src"),
      },
    },
  });
});
